Inspecting 50 files
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCECCCWCCCWCCCCCCCCCCC

Offenses:

app/channels/application_cable/channel.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ApplicationCable ...
^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ApplicationCable
^
app/controllers/equipments_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class EquipmentsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/equipments_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class EquipmentsController < ApplicationController
^^^^^
app/controllers/equipments_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class EquipmentsController < ApplicationController
^
app/controllers/equipments_controller.rb:2:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/equipments_controller.rb:4:44: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
    @equipments = Equipment.order('id ASC');
                                           ^
app/controllers/equipments_controller.rb:12:31: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
    @equipment = Equipment.new;
                              ^
app/controllers/equipments_controller.rb:17:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/equipments_controller.rb:19:36: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      redirect_to(equipments_path) #, notice:"#{@book.Title} Was Added !")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/equipments_controller.rb:32:47: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      redirect_to(equipment_path(@equipment)) #, notice:"#{@book.Title} Was Updated !")
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/equipments_controller.rb:45:34: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    redirect_to(equipments_path) #, notice:"#{@book.Title} Was Deleted !")
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/equipments_controller.rb:49:44: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
    @equipments = Equipment.order('id ASC');
                                           ^
app/controllers/equipments_controller.rb:53:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def check_in ...
  ^^^^^^^^^^^^
app/controllers/equipments_controller.rb:56:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def check_out ...
  ^^^^^^^^^^^^^
app/controllers/equipments_controller.rb:62:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/home_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class HomeController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/home_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class HomeController < ApplicationController
^^^^^
app/controllers/home_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class HomeController < ApplicationController
^
app/controllers/reservations_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ReservationsController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reservations_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class ReservationsController < ApplicationController
^^^^^
app/controllers/reservations_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ReservationsController < ApplicationController
^
app/controllers/reservations_controller.rb:3:48: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
    @reservations = Reservation.order('id ASC');
                                               ^
app/controllers/reservations_controller.rb:11:35: C: [Correctable] Style/Semicolon: Do not use semicolons to terminate expressions.
    @reservation = Reservation.new;
                                  ^
app/controllers/reservations_controller.rb:18:38: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      redirect_to(reservations_path) #, notice:"#{@book.Title} Was Added !")
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reservations_controller.rb:31:51: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      redirect_to(reservation_path(@reservation)) #, notice:"#{@book.Title} Was Updated !")
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/reservations_controller.rb:44:36: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    redirect_to(reservations_path) #, notice:"#{@book.Title} Was Deleted !")
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class UsersController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class UsersController < ApplicationController
^^^^^
app/controllers/users_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class UsersController < ApplicationController
^
app/controllers/users_controller.rb:2:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def index ...
  ^^^^^^^^^
app/controllers/users_controller.rb:5:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:8:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def new ...
  ^^^^^^^
app/controllers/users_controller.rb:11:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/users_controller.rb:14:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def delete ...
  ^^^^^^^^^^
app/models/account.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Account < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/account.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Account < ApplicationRecord
^
app/models/account.rb:17:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/application_record.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ApplicationRecord < ActiveRecord::Base ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class ApplicationRecord < ActiveRecord::Base
^^^^^
app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ApplicationRecord < ActiveRecord::Base
^
app/models/equipment.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Equipment < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/equipment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Equipment < ApplicationRecord
^
app/models/equipment.rb:2:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/reservation.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Reservation < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/reservation.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Reservation < ApplicationRecord
^
app/models/user.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class User < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class User < ApplicationRecord
^
config/environments/development.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/development.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:19:6: C: Rails/FilePath: Please use Rails.root.join('path/to') instead.
  if Rails.root.join('tmp', 'caching-dev.txt').exist?
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:79:3: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
  #add to other environments for deployment host should be actual host of application
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/production.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:56:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:91:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:92:50: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
    logger           = ActiveSupport::Logger.new(STDOUT)
                                                 ^^^^^^
config/environments/production.rb:119:101: C: Layout/LineLength: Line is too long. [114/100]
  # config.active_record.database_resolver_context = ActiveRecord::Middleware::DatabaseSelector::Resolver::Session
                                                                                                    ^^^^^^^^^^^^^^
config/environments/test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "active_support/core_ext/integer/time" ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "active_support/core_ext/integer/time"
^
config/environments/test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "active_support/core_ext/integer/time"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:3:101: C: Layout/LineLength: Line is too long. [107/100]
# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
                                                                                                    ^^^^^^^
config/initializers/backtrace_silencers.rb:6:101: C: Layout/LineLength: Line is too long. [111/100]
# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code
                                                                                                    ^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:7:101: C: Layout/LineLength: Line is too long. [113/100]
# by setting BACKTRACE=1 before calling your invocation, like "BACKTRACE=1 ./bin/rails runner 'MyClass.perform'".
                                                                                                    ^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:8:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
Rails.backtrace_cleaner.remove_silencers! if ENV["BACKTRACE"]
                                                 ^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/content_security_policy.rb:15:101: C: Layout/LineLength: Line is too long. [110/100]
#   policy.connect_src :self, :https, "http://localhost:3035", "ws://localhost:3035" if Rails.env.development?
                                                                                                    ^^^^^^^^^^
config/initializers/content_security_policy.rb:22:101: C: Layout/LineLength: Line is too long. [107/100]
# Rails.application.config.content_security_policy_nonce_generator = -> request { SecureRandom.base64(16) }
                                                                                                    ^^^^^^^
config/initializers/cookies_serializer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/cookies_serializer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/devise.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:17:101: C: Layout/LineLength: Line is too long. [154/100]
  # config.secret_key = '7da02254d8c3ea4eb21a2b509d8ee25baa4d363ba7f65569ecec5ab55026074e6c40bb35b95426f650fc7867006f4e3ad26ba2331b9200eef379f6d713db5479'
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:129:101: C: Layout/LineLength: Line is too long. [150/100]
  # config.pepper = 'be63089d98c6a427eda3bd42f942889967c7c22416a5d58cc87a5309b6a94b0c3bfb68258af9c630c061d6578282f17ca85709448e407d8eb37ab001063c1ec7'
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:300:101: C: Layout/LineLength: Line is too long. [116/100]
  # If your app is using Turbolinks, Turbolinks::Controller needs to be included to make redirection work correctly:
                                                                                                    ^^^^^^^^^^^^^^^^
config/initializers/filter_parameter_logging.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/filter_parameter_logging.rb:4:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
Rails.application.config.filter_parameters += [ ...
                                              ^
config/initializers/inflections.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/mime_types.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
config/initializers/permissions_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Define an application-wide HTTP permissions policy. For further ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Define an application-wide HTTP permissions policy. For further
^
config/initializers/wrap_parameters.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# Be sure to restart your server when you modify this file. ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/wrap_parameters.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# Be sure to restart your server when you modify this file.
^
db/migrate/20210209002353_create_users.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateUsers < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210209002353_create_users.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreateUsers < ActiveRecord::Migration[6.1]
^^^^^
db/migrate/20210209002353_create_users.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateUsers < ActiveRecord::Migration[6.1]
^
db/migrate/20210209002441_create_equipment.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateEquipment < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210209002441_create_equipment.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreateEquipment < ActiveRecord::Migration[6.1]
^^^^^
db/migrate/20210209002441_create_equipment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateEquipment < ActiveRecord::Migration[6.1]
^
db/migrate/20210209002739_create_reservations.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateReservations < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210209002739_create_reservations.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreateReservations < ActiveRecord::Migration[6.1]
^^^^^
db/migrate/20210209002739_create_reservations.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateReservations < ActiveRecord::Migration[6.1]
^
db/migrate/20210213185738_devise_create_accounts.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210213185738_devise_create_accounts.rb:3:1: C: Style/Documentation: Missing top-level class documentation comment.
class DeviseCreateAccounts < ActiveRecord::Migration[6.1]
^^^^^
db/migrate/20210213185738_devise_create_accounts.rb:7:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20210213185738_devise_create_accounts.rb:8:59: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20210213185738_devise_create_accounts.rb:31:101: C: Layout/LineLength: Line is too long. [104/100]
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
                                                                                                    ^^^^
db/migrate/20210213185738_devise_create_accounts.rb:35:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
db/migrate/20210213203842_add_extra_account_fields.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class AddExtraAccountFields < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210213203842_add_extra_account_fields.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class AddExtraAccountFields < ActiveRecord::Migration[6.1]
^^^^^
db/migrate/20210213203842_add_extra_account_fields.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class AddExtraAccountFields < ActiveRecord::Migration[6.1]
^
db/migrate/20210213203842_add_extra_account_fields.rb:3:5: C: Rails/BulkChangeTable: You can use change_table :accounts, bulk: true to combine alter queries.
    add_column :accounts, :first_name, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20210213203842_add_extra_account_fields.rb:7:62: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    add_column :accounts, :is_admin, :boolean, default: false 
                                                             ^
db/migrate/20210213203842_add_extra_account_fields.rb:11:5: C: Rails/BulkChangeTable: You can use change_table :accounts, bulk: true to combine alter queries.
    remove_column :accounts, :first_name, :string
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
node_modules/node-sass/src/libsass/contrib/libsass.spec:1:5: E: Lint/Syntax: unexpected token tCOLON
(Using Ruby 3.0 parser; configure using TargetRubyVersion parameter, under AllCops)
Name:           libsass
    ^
node_modules/node-sass/src/libsass/extconf.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'mkmf'
^
node_modules/node-sass/src/libsass/extconf.rb:3:1: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
#$LIBPATH.push(Config::CONFIG['libdir'])
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
node_modules/node-sass/src/libsass/extconf.rb:4:1: C: Style/GlobalVars: Do not introduce global variables.
$CFLAGS << " #{ENV["CFLAGS"]}"
^^^^^^^
node_modules/node-sass/src/libsass/extconf.rb:4:20: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
$CFLAGS << " #{ENV["CFLAGS"]}"
                   ^^^^^^^^
node_modules/node-sass/src/libsass/extconf.rb:5:1: C: Style/GlobalVars: Do not introduce global variables.
$LIBS << " #{ENV["LIBS"]}"
^^^^^
node_modules/node-sass/src/libsass/extconf.rb:5:18: C: [Correctable] Style/StringLiteralsInInterpolation: Prefer single-quoted strings inside interpolations.
$LIBS << " #{ENV["LIBS"]}"
                 ^^^^^^
node_modules/node-sass/src/libsass/extconf.rb:6:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
create_makefile("libsass")
                ^^^^^^^^^
spec/controllers/equipments_controller_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/equipments_controller_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/controllers/equipments_controller_spec.rb:4:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/controllers/equipments_controller_spec.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    context 'GET #index' do
^^^^
spec/controllers/equipments_controller_spec.rb:7:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        it 'returns a success response' do
    ^^^^
spec/controllers/equipments_controller_spec.rb:8:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            get :index
        ^^^^
spec/controllers/equipments_controller_spec.rb:12:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/controllers/equipments_controller_spec.rb:13:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/controllers/home_controller_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/controllers/home_controller_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/controllers/home_controller_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "HomeController", type: :feature  do
               ^^^^^^^^^^^^^^^^
spec/controllers/home_controller_spec.rb:3:48: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
RSpec.describe "HomeController", type: :feature  do
                                               ^
spec/controllers/home_controller_spec.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it 'signs in user' do
^^^^
spec/controllers/home_controller_spec.rb:14:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_session_path
    ^^^^
spec/controllers/home_controller_spec.rb:33:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
# end
     
spec/controllers/reservations_controller_spec.rb:1:1: W: Lint/EmptyFile: Empty file detected.
spec/factories/accounts.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
FactoryBot.define do ...
^^^^^^^^^^^^^^^^^^^^
spec/factories/accounts.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
FactoryBot.define do
^
spec/factories/accounts.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    factory :account do
^^^^
spec/factories/accounts.rb:3:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        email {FFaker::Internet.email}
    ^^^^
spec/factories/accounts.rb:3:16: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
        email {FFaker::Internet.email}
               ^
spec/factories/accounts.rb:3:38: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        email {FFaker::Internet.email}
                                     ^
spec/factories/accounts.rb:4:19: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
        password {Devise.friendly_token.first(8)}
                  ^
spec/factories/accounts.rb:4:49: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        password {Devise.friendly_token.first(8)}
                                                ^
spec/factories/accounts.rb:6:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/features/account_feature_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/features/account_feature_spec.rb:5:22: C: Style/AsciiComments: Use only ascii symbols in comments.
# 3. Visit the page I’m interested in
                     ^
spec/features/account_feature_spec.rb:6:90: C: Style/AsciiComments: Use only ascii symbols in comments.
# 4. Perform whatever clicks and typing need to happen in order to exercise the feature I’m testing
                                                                                         ^
spec/features/account_feature_spec.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    login_as(FactoryBot.create(:account, first_name: 'Bill', last_name: 'Nye', email: 'thescienceguy@test.com', phone_number: '1112223333', secondary_contact: 'no@gmail.com', password: 'password'))
^^^^
spec/features/account_feature_spec.rb:11:101: C: [Correctable] Layout/LineLength: Line is too long. [197/100]
    login_as(FactoryBot.create(:account, first_name: 'Bill', last_name: 'Nye', email: 'thescienceguy@test.com', phone_number: '1112223333', secondary_contact: 'no@gmail.com', password: 'password'))
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Account Sign Up", type: :feature do
               ^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:16:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario "visiting site to sign up" do
^^^^
spec/features/account_feature_spec.rb:16:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    scenario "visiting site to sign up" do
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:17:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_registration_path
    ^^^^
spec/features/account_feature_spec.rb:32:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Account Log In", type: :feature do
               ^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:33:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario "visiting site to login" do
^^^^
spec/features/account_feature_spec.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    scenario "visiting site to login" do
             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:34:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_session_path
    ^^^^
spec/features/account_feature_spec.rb:42:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Account Shows Info", type: :feature do
               ^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:43:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario "valid info" do
^^^^
spec/features/account_feature_spec.rb:43:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    scenario "valid info" do
             ^^^^^^^^^^^^
spec/features/account_feature_spec.rb:44:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_session_path
    ^^^^
spec/features/account_feature_spec.rb:57:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Update Account Info", type: :feature do
               ^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:58:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario "valid inputs" do
^^^^
spec/features/account_feature_spec.rb:58:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    scenario "valid inputs" do
             ^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:59:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_session_path
    ^^^^
spec/features/account_feature_spec.rb:85:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "Delete Account", type: :feature do
               ^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:86:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    scenario "deleting account with button" do
^^^^
spec/features/account_feature_spec.rb:86:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    scenario "deleting account with button" do
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/features/account_feature_spec.rb:87:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        visit new_account_session_path
    ^^^^
spec/features/account_feature_spec.rb:91:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            click_button 'Cancel my account'
        ^^^^
spec/features/account_feature_spec.rb:99:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/features/ui_tests.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/features/ui_tests.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/features/ui_tests.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    describe 'login page' do
^^^^
spec/features/ui_tests.rb:5:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        it 'shows log in text' do
    ^^^^
spec/features/ui_tests.rb:6:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:11:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/features/ui_tests.rb:18:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:30:40: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        it 'has login submit button' do 
                                       ^
spec/features/ui_tests.rb:31:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:34:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/features/ui_tests.rb:35:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        it 'has sign up link' do 
                                ^
spec/features/ui_tests.rb:36:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:40:41: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        it 'has forgot password link' do 
                                        ^
spec/features/ui_tests.rb:41:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_session_path
        ^^^^
spec/features/ui_tests.rb:48:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    describe 'sign up page' do
^^^^
spec/features/ui_tests.rb:49:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        it 'shows sign up text' do
    ^^^^
spec/features/ui_tests.rb:50:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:55:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:62:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:69:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:76:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:83:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:90:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:97:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:104:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:110:40: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        it 'has login submit button' do 
                                       ^
spec/features/ui_tests.rb:111:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:114:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/features/ui_tests.rb:115:33: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
        it 'has sign up link' do 
                                ^
spec/features/ui_tests.rb:116:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            visit new_account_registration_path
        ^^^^
spec/features/ui_tests.rb:129:6: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
# end
     
spec/models/account_model_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/account_model_spec.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    context 'validation tests' do
^^^^
spec/models/account_model_spec.rb:5:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/models/account_model_spec.rb:6:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        it 'ensures email is present' do
    ^^^^
spec/models/account_model_spec.rb:7:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
        ^^^^
spec/models/account_model_spec.rb:7:101: C: [Correctable] Layout/LineLength: Line is too long. [169/100]
            account = Account.new(password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:12:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(email: 'spamspamspam@gmail.com', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
        ^^^^
spec/models/account_model_spec.rb:12:101: C: [Correctable] Layout/LineLength: Line is too long. [183/100]
            account = Account.new(email: 'spamspamspam@gmail.com', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:15:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/account_model_spec.rb:17:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
        ^^^^
spec/models/account_model_spec.rb:17:101: C: [Correctable] Layout/LineLength: Line is too long. [181/100]
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:20:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/account_model_spec.rb:22:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
        ^^^^
spec/models/account_model_spec.rb:22:101: C: [Correctable] Layout/LineLength: Line is too long. [180/100]
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:25:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/models/account_model_spec.rb:27:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', secondary_contact: 'bademail@gmail.com').save
        ^^^^
spec/models/account_model_spec.rb:27:101: C: [Correctable] Layout/LineLength: Line is too long. [174/100]
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:32:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824').save
        ^^^^
spec/models/account_model_spec.rb:32:101: C: [Correctable] Layout/LineLength: Line is too long. [161/100]
            account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:37:10: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
             account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
         ^^^^
spec/models/account_model_spec.rb:37:14: W: Lint/UselessAssignment: Useless assignment to variable - account.
             account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
             ^^^^^^^
spec/models/account_model_spec.rb:37:101: C: [Correctable] Layout/LineLength: Line is too long. [203/100]
             account = Account.new(email: 'spamspamspam@gmail.com', password: 'admin', first_name: 'Bobby', last_name: 'Johnson', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com').save
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:38:10: C: [Correctable] Layout/BlockAlignment: end at 38, 9 is not aligned with it 'should save successfully' do at 36, 8.
         end
         ^^^
spec/models/account_model_spec.rb:42:5: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
    ^^^^
spec/models/account_model_spec.rb:42:12: W: [Correctable] Lint/ParenthesesAsGroupedExpression: (...) interpreted as grouped expression.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
           ^
spec/models/account_model_spec.rb:42:24: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside {.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
                       ^
spec/models/account_model_spec.rb:42:24: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
                       ^
spec/models/account_model_spec.rb:42:101: C: [Correctable] Layout/LineLength: Line is too long. [198/100]
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/models/account_model_spec.rb:42:197: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
                                                                                                                                                                                                    ^
spec/models/account_model_spec.rb:42:198: C: [Correctable] Layout/SpaceInsideBlockBraces: Space missing inside }.
        let (:params) {{email: 'something@gmail.com', password: 'admin', first_name: 'First', last_name: 'Last', phone_number: '5122638824', secondary_contact: 'bademail@gmail.com', is_admin: true}}
                                                                                                                                                                                                     ^
spec/models/account_model_spec.rb:44:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            Account.new(params).save
        ^^^^
spec/models/account_model_spec.rb:52:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            expect(Account.admin_accounts.size).to eq(0)
        ^^^^
spec/models/account_model_spec.rb:56:9: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
            expect(Account.member_accounts.size).to eq(0)
        ^^^^
spec/models/account_model_spec.rb:59:4: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
end
   
spec/rails_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:6:7: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:64:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/rails_helper.rb:67:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/spec_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/spec_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/spec_helper.rb:49:1: C: [Correctable] Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/channels/application_cable/connection_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:3:7: C: [Correctable] Style/ClassAndModuleChildren: Use nested module/class definitions instead of compact style.
class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/equipments_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:4:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get show" do
       ^^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:14:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:19:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/equipments_controller_test.rb:24:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get delete" do
       ^^^^^^^^^^^^^^^^^^^
test/controllers/home_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/controllers/home_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/home_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/home_controller_test.rb:4:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/reservations_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:4:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get show" do
       ^^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:14:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:19:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/reservations_controller_test.rb:24:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get delete" do
       ^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/controllers/users_controller_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:4:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get show" do
       ^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:14:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get new" do
       ^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:19:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get edit" do
       ^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:24:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get delete" do
       ^^^^^^^^^^^^^^^^^^^
test/models/account_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/models/account_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/account_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/equipment_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/models/equipment_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/equipment_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/reservation_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/models/reservation_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/reservation_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^
test/models/user_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "test_helper" ...
^^^^^^^^^^^^^^^^^^^^^
test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "test_helper"
^
test/models/user_test.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "test_helper"
        ^^^^^^^^^^^^^

50 files inspected, 298 offenses detected, 220 offenses auto-correctable
